{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleClick","setState","prevState","event","this","props","className","summary","location","dateTime","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","start","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","result","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","eventCount","filteredEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.e727e0e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    show: false,\n  };\n\n  handleClick = () => {\n    this.setState((prevState) => ({ show: !prevState.show }));\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <div>\n        <div className=\"Event\">\n          <h2 className=\"EventSummary\">{event.summary}</h2>\n          <p className=\"EventLocation\">{event.location}</p>\n          <p className=\"EventDate\">{event.dateTime}</p>\n        </div>\n        {this.state.show === true && (\n          <p className=\"EventDetails\">{event.description}</p>\n        )}\n        {this.state.show === false && (\n          <button className=\"showMore\" onClick={() => this.handleClick()}>\n            Show details\n          </button>\n        )}\n        {this.state.show === true && (\n          <button className=\"showLess\" onClick={() => this.handleClick()}>\n            hide details\n          </button>\n        )}\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nexport default EventList;\n","import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value,\n    });\n    this.props.updateEvents(null, event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <form>\n          <label> # of Events:</label>\n          <input\n            type=\"number\"\n            className=\"EventsNumber\"\n            value={this.state.numberOfEvents}\n            onChange={(e) => this.handleInputChanged(e)}\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default NumberOfEvents;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n];\n\nexport { mockData };\n","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nimport { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://dgw77dav94.execute-api.us-east-2.amazonaws.com/dev/api/token\" +\n      \"/\" +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://dgw77dav94.execute-api.us-east-2.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://dgw77dav94.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from \"./api\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <ul className=\"App\">\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <EventList events={this.state.events} />\n      </ul>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}